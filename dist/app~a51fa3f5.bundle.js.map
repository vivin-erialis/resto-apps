{"version":3,"file":"app~a51fa3f5.bundle.js","mappings":";0YACA,smNASA,IAAQA,EAAuDC,EAAAA,EAAAA,cAAxCC,EAAwCD,EAAAA,EAAAA,iBAAtBE,EAAsBF,EAAAA,EAAAA,kBAEzDG,GAAYC,EAAAA,EAAAA,IAAOL,EAAeE,EAAkB,CACxDI,QAAO,SAACC,GACNA,EAASC,kBAAkBL,EAAmB,CAAEM,QAAS,MAC3D,IA8BF,QA3ByB,CACjBC,SAAQ,SAACC,GAAI,oGACZA,EAAI,CAAF,gEAIOP,EAAS,uCAAEQ,IAAIT,EAAmBQ,IAAE,0CALjC,EAMnB,EACME,YAAW,WAAG,iHACJT,EAAS,uCAAEU,OAAOX,IAAiB,0CAD/B,EAEpB,EACMY,SAAQ,SAACC,GAAO,oGACfA,EAAMC,eAAe,MAAO,CAAF,gEAIjBb,EAAS,uCAAEc,IAAIf,EAAmBa,IAAK,0CALjC,EAMtB,EACMG,YAAW,SAACR,GAAI,iHACNP,EAAS,8CAASD,EAAmBQ,IAAE,0CADjC,EAEtB,EAEMS,YAAW,WAAG,sIAEpB,gDC/BF,QANqB,CACnBC,KAAM,GAAF,OAAKpB,EAAAA,EAAAA,SAAe,QACxBqB,OAAQ,SAACX,GAAE,gBAAQV,EAAAA,EAAAA,SAAe,kBAAUU,EAAE,EAC9CY,YAAa,GAAF,OAAKtB,EAAAA,EAAAA,SAAe,8PCPjC,4wNA8BA,QA1BsB,yBAJtB,4FAIsB,SAJtB,QAeG,EANA,EALmB,EAuBnB,OA3BH,EAIsB,OAJtB,EAIsB,uCACpB,sGACyBuB,MAAMC,EAAAA,MAAkB,OAAjC,OAARC,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaC,aAAW,2CAChC,qFAED,WAAyBlB,GAAE,yFACFa,MAAMC,EAAAA,OAAoBd,IAAI,OAAvC,OAARe,EAAW,EAAH,cACaA,EAASC,OAAM,OAAxB,OAAZC,EAAe,EAAH,uBACXA,EAAaE,YAAU,2CAC/B,oFAED,WAAuBC,GAAI,uFACFP,MAAMC,EAAAA,WAAyB,CACpDO,OAAQ,OACRC,QAAS,CACP,eAAgB,kBAChB,eAAgBhC,EAAAA,EAAAA,KAElBiC,KAAMC,KAAKC,UAAUL,KACrB,OAPY,OAARL,EAAW,EAAH,uBAQPA,GAAQ,2CAChB,+CA3BH,6DA2BG,EAvBmB,mCCOtB,QAXe,CACbW,IAAK,QACLC,SAAU,uCACVC,eAAgB,qDAChBC,iBAAkB,QAClBC,YAAY,IAAIC,MAAOC,cACvB3C,cAAe,sBACfE,iBAAkB,EAClBC,kBAAmB,wFCWfyC,EAAM,IAAIC,EAAAA,EAAI,CAClBC,OAAQC,SAASC,cAAc,kBAC/BC,OAAQF,SAASC,cAAc,qBAC/BE,QAASH,SAASC,cAAc,kBAGlCG,OAAOC,iBAAiB,cAAc,WACpCR,EAAIS,YACN,IAEAF,OAAOC,iBAAiB,QAAQ,WAC9BR,EAAIS,cACJC,EAAAA,EAAAA,IACF","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-resto-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/therestodb-source.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["/* eslint-disable linebreak-style */\r\n/* eslint-disable no-prototype-builtins */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-empty-function */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport { openDB } from 'idb';\r\nimport CONFIG from '../globals/config';\r\n\r\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\r\n\r\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\r\n  upgrade(database) {\r\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\r\n  },\r\n});\r\n\r\nconst FavoriteRestoIdb = {\r\n  async getResto(id) {\r\n    if (!id) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\r\n  },\r\n  async getAllResto() {\r\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\r\n  },\r\n  async putResto(resto) {\r\n    if (!resto.hasOwnProperty('id')) {\r\n      return;\r\n    }\r\n\r\n    return (await dbPromise).put(OBJECT_STORE_NAME, resto);\r\n  },\r\n  async deleteResto(id) {\r\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\r\n  },\r\n\r\n  async searchResto() {\r\n\r\n  },\r\n};\r\n\r\nexport default FavoriteRestoIdb;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable linebreak-style */\r\nimport CONFIG from './config';\r\n\r\nconst API_ENDPOINT = {\r\n  LIST: `${CONFIG.BASE_URL}list`,\r\n  DETAIL: (id) => `${CONFIG.BASE_URL}detail/${id}`,\r\n  POST_REVIEW: `${CONFIG.BASE_URL}review`,\r\n};\r\n\r\nexport default API_ENDPOINT;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\nimport API_ENDPOINT from '../globals/api-endpoint';\r\nimport CONFIG from '../globals/config';\r\n\r\nclass TheRestoDbSource {\r\n  static async listResto() {\r\n    const response = await fetch(API_ENDPOINT.LIST);\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurants;\r\n  }\r\n\r\n  static async detailResto(id) {\r\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\r\n    const responseJson = await response.json();\r\n    return responseJson.restaurant;\r\n  }\r\n\r\n  static async addReview(data) {\r\n    const response = await fetch(API_ENDPOINT.ADD_REVIEW, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'aplication/json',\r\n        'X-Auth-Token': CONFIG.KEY,\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n    return response;\r\n  }\r\n}\r\n\r\nexport default TheRestoDbSource;\r\n","/* eslint-disable linebreak-style */\r\nconst CONFIG = {\r\n  KEY: '12345',\r\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\r\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\r\n  DEFAULT_LANGUAGE: 'en-us',\r\n  CACHE_NAME: new Date().toISOString(),\r\n  DATABASE_NAME: 'resto-apps-database',\r\n  DATABASE_VERSION: 1,\r\n  OBJECT_STORE_NAME: 'restaurants',\r\n};\r\n\r\nexport default CONFIG;\r\n","/* eslint-disable linebreak-style */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable import/extensions */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable linebreak-style */\r\n/* eslint-disable import/no-unresolved */\r\n/* eslint-disable linebreak-style */\r\nimport 'regenerator-runtime';\r\nimport '../styles/main.css';\r\nimport '../styles/responsive.css';\r\nimport App from './views/app';\r\nimport './views/templates/component/header';\r\nimport './views/templates/component/hero';\r\n\r\nimport swRegister from './utils/sw-register';\r\n\r\nconst app = new App({\r\n  button: document.querySelector('#hamburgerMenu'),\r\n  drawer: document.querySelector('#drawerNavigation'),\r\n  content: document.querySelector('#mainContent'),\r\n});\r\n\r\nwindow.addEventListener('hashchange', () => {\r\n  app.renderPage();\r\n});\r\n\r\nwindow.addEventListener('load', () => {\r\n  app.renderPage();\r\n  swRegister();\r\n});\r\n"],"names":["DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getResto","id","get","getAllResto","getAll","putResto","resto","hasOwnProperty","put","deleteResto","searchResto","LIST","DETAIL","POST_REVIEW","fetch","API_ENDPOINT","response","json","responseJson","restaurants","restaurant","data","method","headers","body","JSON","stringify","KEY","BASE_URL","BASE_IMAGE_URL","DEFAULT_LANGUAGE","CACHE_NAME","Date","toISOString","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}